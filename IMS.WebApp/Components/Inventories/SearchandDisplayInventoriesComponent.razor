@inject IViewInventoriesByNameUserCase ViewInventoriesByUseCase
<SearchInventoryComponent OnSearchInventory="OnSearchInventory"></SearchInventoryComponent>

@if (_inventories.Count > 0)
{
    <div class="Serah-result-Component">
        <ul>
            @foreach (var inv in _inventories)
            {
                <li @key="inv.InventoryId" 
                     style="cursor:pointer"
                     @onclick="@(async () => { await OnSelectInventory(inv);})">
                    @inv.InventoryName
                </li>
            }
        </ul>
    </div>
}
@code {
    private List<Inventory> _inventories = new List<Inventory>();

    //event callback to pass the inventory back to the parent 
    [Parameter]
    public EventCallback<Inventory> OnInventorySelected { get; set; }

    private async Task OnSearchInventory(string serchTerm)
    {
        _inventories = (await ViewInventoriesByUseCase.ExecuteAsync(serchTerm)).ToList();
    }

    private async Task OnSelectInventory(Inventory inventory)
    {
        await OnInventorySelected.InvokeAsync(inventory);
        _inventories.Clear();

    }
}

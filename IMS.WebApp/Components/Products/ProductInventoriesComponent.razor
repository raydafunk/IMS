@using IMS.CoreBussiness.Entities;
<div class="card">
  <div class="card-body">
 <SearchandDisplayInventoriesComponent OnInventorySelected="OnInventorySelected"></SearchandDisplayInventoriesComponent>
@if(this.Product.ProductInventories != null && this.Product.ProductInventories.Count > 0)
{
    <table class="table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prodInventory in Product.ProductInventories)
            {
                <tr>
                    <td>
                        @prodInventory.Inventory?.InventoryName
                    </td>
                    <td>
                        <input type="number" min="0" @bind-value= "prodInventory.InventoryQuantity" />
                    </td>
                    <td>
                        <button class="btn btn-link"
                         type="button"
                        @onclick="(()=> RemoveInventory(prodInventory))">
                            Remove
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
    </div>
</div>

@code {
    [Parameter]
    public Product Product { get; set; } = new Product();

    private void RemoveInventory(ProductInventory productInventory)
    {
        this.Product.ProductInventories.Remove(productInventory);
    }

    private void OnInventorySelected(Inventory inventory)
    {
        this.Product.AddInventory(inventory);
    }
}

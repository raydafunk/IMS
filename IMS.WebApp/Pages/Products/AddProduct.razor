@page "/addproduct"
@inject IAddProductUseCase AddProdutUseCase
@inject NavigationManager NavigationManger
<h3>AddProduct</h3>
<br />
<EditForm Model="product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
          <label for="name">Product Name</label>
          <InputText 
              id="name" 
              @bind-Value= "product.ProductName"
              class="form-control">
              </InputText>
      </div>
      <div class="form-group">
          <label for="name">Quantity</label>
          <InputNumber 
              id="quantity" 
              @bind-Value= "product.Quantity"
              class="form-control">
              </InputNumber>
      </div>
      <div class="form-group">
          <label for="price">Price</label>
          <InputNumber
              id="price" 
              @bind-Value= "product.Price"
              class="form-control">
        </InputNumber>
      </div>
      <div class="form-group">
          <label for="invs">Inventories</label>
          <ProductInventoriesComponent Product="this.product"></ProductInventoriesComponent>
      </div>
      <br/>
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-primary" @onclick="CaneclAction">Cancel</button>
</EditForm>
@code {
    private Product product = new Product();

    private async Task SaveProduct()
    {
        await AddProdutUseCase.ExecuteAsync(product);
        NavigationManger.NavigateTo("/products");
    }
    private void CaneclAction()
    {
        NavigationManger.NavigateTo("/products");
    }
}
